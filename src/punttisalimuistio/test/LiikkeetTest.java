package punttisalimuistio.test;
// Generated by ComTest BEGIN
import java.io.File;
import punttisalimuistio.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.06.25 15:51:41 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class LiikkeetTest {



  // Generated by ComTest BEGIN
  /** testGetLkm40 */
  @Test
  public void testGetLkm40() {    // Liikkeet: 40
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(1); 
    assertEquals("From: Liikkeet line: 43", 0, liikkeet.getLkm()); 
    lii1T1.rekisteroi(); 
    liikkeet.lisaa(lii1T1); 
    assertEquals("From: Liikkeet line: 46", 1, liikkeet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa58 */
  @Test
  public void testLisaa58() {    // Liikkeet: 58
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(1); 
    Liike lii2T1 = new Liike(1); 
    assertEquals("From: Liikkeet line: 62", 0, liikkeet.getLkm()); 
    lii1T1.rekisteroi(); 
    liikkeet.lisaa(lii1T1); 
    assertEquals("From: Liikkeet line: 65", 1, liikkeet.getLkm()); 
    lii2T1.rekisteroi(); 
    liikkeet.lisaa(lii2T1); 
    assertEquals("From: Liikkeet line: 68", 2, liikkeet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta82 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta82() throws SailoException {    // Liikkeet: 82
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(); lii1T1.taytaLiike(1); 
    Liike lii2T1 = new Liike(); lii2T1.taytaLiike(1); 
    Liike lii3T2 = new Liike(); lii3T2.taytaLiike(2); 
    Liike lii4T2 = new Liike(); lii4T2.taytaLiike(2); 
    Liike lii5T2 = new Liike(); lii5T2.taytaLiike(2); 
    String nimi = "testi"; 
    File tiedosto = new File(nimi + "/liikkeet.dat"); 
    File dir = new File(nimi); 
    dir.mkdir(); 
    tiedosto.delete(); 
    liikkeet.lisaa(lii1T1); 
    liikkeet.lisaa(lii2T1); 
    liikkeet.lisaa(lii3T2); 
    liikkeet.lisaa(lii4T2); 
    liikkeet.lisaa(lii5T2); 
    liikkeet.talleta(nimi); 
    Iterator<Liike> i = liikkeet.iterator(); 
    assertEquals("From: Liikkeet line: 103", lii1T1.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 104", lii2T1.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 105", lii3T2.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 106", lii4T2.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 107", lii5T2.toString(), i.next().toString()); 
    liikkeet = new Liikkeet(); 
    i = liikkeet.iterator(); 
    assertEquals("From: Liikkeet line: 110", false, i.hasNext()); 
    liikkeet.lueTiedostosta(nimi); 
    liikkeet.lisaa(lii5T2); 
    liikkeet.talleta(nimi); 
    assertEquals("From: Liikkeet line: 114", true, tiedosto.delete()); 
    assertEquals("From: Liikkeet line: 115", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator184 */
  @Test
  public void testIterator184() {    // Liikkeet: 184
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(1); liikkeet.lisaa(lii1T1); 
    Liike lii2T1 = new Liike(1); liikkeet.lisaa(lii2T1); 
    Liike lii3T2 = new Liike(2); liikkeet.lisaa(lii3T2); 
    Liike lii4T2 = new Liike(2); liikkeet.lisaa(lii4T2); 
    Liike lii5T2 = new Liike(2); liikkeet.lisaa(lii5T2); 
    Iterator<Liike> i2=liikkeet.iterator(); 
    assertEquals("From: Liikkeet line: 194", lii1T1, i2.next()); 
    assertEquals("From: Liikkeet line: 195", lii2T1, i2.next()); 
    assertEquals("From: Liikkeet line: 196", lii3T2, i2.next()); 
    assertEquals("From: Liikkeet line: 197", lii4T2, i2.next()); 
    assertEquals("From: Liikkeet line: 198", lii5T2, i2.next()); 
    try {
    assertEquals("From: Liikkeet line: 199", lii4T2, i2.next()); 
    fail("Liikkeet: 199 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int treNrot[] = { 1,1,2,2,2} ; 
    for ( Liike lii : liikkeet ) {
    assertEquals("From: Liikkeet line: 203", treNrot[n], lii.getTreeniNro()); n++; 
    }
    assertEquals("From: Liikkeet line: 205", 5, n); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna219 */
  @Test
  public void testAnna219() {    // Liikkeet: 219
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(1); liikkeet.lisaa(lii1T1); 
    Liike lii2T1 = new Liike(1); liikkeet.lisaa(lii2T1); 
    Liike lii3T2 = new Liike(2); liikkeet.lisaa(lii3T2); 
    Liike lii4T2 = new Liike(2); liikkeet.lisaa(lii4T2); 
    Liike lii5T2 = new Liike(2); liikkeet.lisaa(lii5T2); 
    Liike lii6T5 = new Liike(5); liikkeet.lisaa(lii6T5); 
    List<Liike> loytyneet; 
    loytyneet = liikkeet.anna(3); 
    assertEquals("From: Liikkeet line: 230", 0, loytyneet.size()); 
    loytyneet = liikkeet.anna(1); 
    assertEquals("From: Liikkeet line: 232", 2, loytyneet.size()); 
    assertEquals("From: Liikkeet line: 233", true, loytyneet.get(0) == lii1T1); 
    assertEquals("From: Liikkeet line: 234", true, loytyneet.get(1) == lii2T1); 
    loytyneet = liikkeet.anna(5); 
    assertEquals("From: Liikkeet line: 236", 1, loytyneet.size()); 
    assertEquals("From: Liikkeet line: 237", true, loytyneet.get(0) == lii6T5); 
  } // Generated by ComTest END
}