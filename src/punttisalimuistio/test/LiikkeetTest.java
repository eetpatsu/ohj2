package punttisalimuistio.test;
// Generated by ComTest BEGIN
import java.io.File;
import punttisalimuistio.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.06.26 22:58:52 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class LiikkeetTest {



  // Generated by ComTest BEGIN
  /** testGetLkm41 */
  @Test
  public void testGetLkm41() {    // Liikkeet: 41
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(1); 
    assertEquals("From: Liikkeet line: 44", 0, liikkeet.getLkm()); 
    lii1T1.rekisteroi(); 
    liikkeet.lisaa(lii1T1); 
    assertEquals("From: Liikkeet line: 47", 1, liikkeet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa59 */
  @Test
  public void testLisaa59() {    // Liikkeet: 59
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(1); 
    Liike lii2T1 = new Liike(1); 
    assertEquals("From: Liikkeet line: 63", 0, liikkeet.getLkm()); 
    lii1T1.rekisteroi(); 
    liikkeet.lisaa(lii1T1); 
    assertEquals("From: Liikkeet line: 66", 1, liikkeet.getLkm()); 
    lii2T1.rekisteroi(); 
    liikkeet.lisaa(lii2T1); 
    assertEquals("From: Liikkeet line: 69", 2, liikkeet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa83 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa83() throws CloneNotSupportedException {    // Liikkeet: 83
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(); 
    lii1T1.rekisteroi(); 
    lii1T1.taytaLiike(1); 
    liikkeet.lisaa(lii1T1); 
    Liike lii2T1 = new Liike(); 
    lii2T1.rekisteroi(); 
    lii2T1.taytaLiike(1); 
    liikkeet.lisaa(lii2T1); 
    liikkeet.korvaaTaiLisaa(lii1T1); 
    liikkeet.korvaaTaiLisaa(lii2T1); 
    assertEquals("From: Liikkeet line: 97", 2, liikkeet.getLkm()); 
    Liike klooni = lii1T1.clone(); 
    assertEquals("From: Liikkeet line: 99", true, lii1T1.toString().equals(klooni.toString())); 
    liikkeet.korvaaTaiLisaa(klooni); 
    assertEquals("From: Liikkeet line: 101", 2, liikkeet.getLkm()); 
    lii1T1.parse("2|1|kyykky|80|3|5"); 
    assertEquals("From: Liikkeet line: 103", false, lii1T1.toString().equals(klooni.toString())); 
    liikkeet.korvaaTaiLisaa(lii1T1); 
    assertEquals("From: Liikkeet line: 105", 3, liikkeet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta126 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta126() throws SailoException {    // Liikkeet: 126
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(); lii1T1.taytaLiike(1); 
    Liike lii2T1 = new Liike(); lii2T1.taytaLiike(1); 
    Liike lii3T2 = new Liike(); lii3T2.taytaLiike(2); 
    Liike lii4T2 = new Liike(); lii4T2.taytaLiike(2); 
    Liike lii5T2 = new Liike(); lii5T2.taytaLiike(2); 
    String nimi = "testi"; 
    File tiedosto = new File(nimi + "/liikkeet.dat"); 
    File dir = new File(nimi); 
    dir.mkdir(); 
    tiedosto.delete(); 
    liikkeet.lisaa(lii1T1); 
    liikkeet.lisaa(lii2T1); 
    liikkeet.lisaa(lii3T2); 
    liikkeet.lisaa(lii4T2); 
    liikkeet.lisaa(lii5T2); 
    liikkeet.talleta(nimi); 
    Iterator<Liike> i = liikkeet.iterator(); 
    assertEquals("From: Liikkeet line: 147", lii1T1.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 148", lii2T1.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 149", lii3T2.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 150", lii4T2.toString(), i.next().toString()); 
    assertEquals("From: Liikkeet line: 151", lii5T2.toString(), i.next().toString()); 
    liikkeet = new Liikkeet(); 
    i = liikkeet.iterator(); 
    assertEquals("From: Liikkeet line: 154", false, i.hasNext()); 
    liikkeet.lueTiedostosta(nimi); 
    liikkeet.lisaa(lii5T2); 
    liikkeet.talleta(nimi); 
    assertEquals("From: Liikkeet line: 158", true, tiedosto.delete()); 
    assertEquals("From: Liikkeet line: 159", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator228 */
  @Test
  public void testIterator228() {    // Liikkeet: 228
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(1); liikkeet.lisaa(lii1T1); 
    Liike lii2T1 = new Liike(1); liikkeet.lisaa(lii2T1); 
    Liike lii3T2 = new Liike(2); liikkeet.lisaa(lii3T2); 
    Liike lii4T2 = new Liike(2); liikkeet.lisaa(lii4T2); 
    Liike lii5T2 = new Liike(2); liikkeet.lisaa(lii5T2); 
    Iterator<Liike> i2=liikkeet.iterator(); 
    assertEquals("From: Liikkeet line: 238", lii1T1, i2.next()); 
    assertEquals("From: Liikkeet line: 239", lii2T1, i2.next()); 
    assertEquals("From: Liikkeet line: 240", lii3T2, i2.next()); 
    assertEquals("From: Liikkeet line: 241", lii4T2, i2.next()); 
    assertEquals("From: Liikkeet line: 242", lii5T2, i2.next()); 
    try {
    assertEquals("From: Liikkeet line: 243", lii4T2, i2.next()); 
    fail("Liikkeet: 243 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int treNrot[] = { 1,1,2,2,2} ; 
    for ( Liike lii : liikkeet ) {
    assertEquals("From: Liikkeet line: 247", treNrot[n], lii.getTreeniNro()); n++; 
    }
    assertEquals("From: Liikkeet line: 249", 5, n); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna263 */
  @Test
  public void testAnna263() {    // Liikkeet: 263
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(1); liikkeet.lisaa(lii1T1); 
    Liike lii2T1 = new Liike(1); liikkeet.lisaa(lii2T1); 
    Liike lii3T2 = new Liike(2); liikkeet.lisaa(lii3T2); 
    Liike lii4T2 = new Liike(2); liikkeet.lisaa(lii4T2); 
    Liike lii5T2 = new Liike(2); liikkeet.lisaa(lii5T2); 
    Liike lii6T5 = new Liike(5); liikkeet.lisaa(lii6T5); 
    List<Liike> loytyneet; 
    loytyneet = liikkeet.anna(3); 
    assertEquals("From: Liikkeet line: 274", 0, loytyneet.size()); 
    loytyneet = liikkeet.anna(1); 
    assertEquals("From: Liikkeet line: 276", 2, loytyneet.size()); 
    assertEquals("From: Liikkeet line: 277", true, loytyneet.get(0) == lii1T1); 
    assertEquals("From: Liikkeet line: 278", true, loytyneet.get(1) == lii2T1); 
    loytyneet = liikkeet.anna(5); 
    assertEquals("From: Liikkeet line: 280", 1, loytyneet.size()); 
    assertEquals("From: Liikkeet line: 281", true, loytyneet.get(0) == lii6T5); 
  } // Generated by ComTest END
}