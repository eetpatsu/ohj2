package punttisalimuistio.test;
// Generated by ComTest BEGIN
import java.io.File;
import punttisalimuistio.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.06.26 17:14:50 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TreenitTest {



  // Generated by ComTest BEGIN
  /** testLisaa52 */
  @Test
  public void testLisaa52() {    // Treenit: 52
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(); 
    Treeni tre2 = new Treeni(); 
    assertEquals("From: Treenit line: 56", 0, treenit.getLkm()); 
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 57", 1, treenit.getLkm()); 
    treenit.lisaa(tre2); assertEquals("From: Treenit line: 58", 2, treenit.getLkm()); 
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 59", 3, treenit.getLkm()); 
    assertEquals("From: Treenit line: 60", tre1, treenit.anna(0)); 
    assertEquals("From: Treenit line: 61", tre2, treenit.anna(1)); 
    assertEquals("From: Treenit line: 62", tre1, treenit.anna(2)); 
    assertEquals("From: Treenit line: 63", false, treenit.anna(1) == tre1); 
    assertEquals("From: Treenit line: 64", true, treenit.anna(1) == tre2); 
    try {
    assertEquals("From: Treenit line: 65", tre1, treenit.anna(3)); 
    fail("Treenit: 65 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 66", 4, treenit.getLkm()); 
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 67", 5, treenit.getLkm()); 
    treenit.lisaa(tre1); treenit.lisaa(tre2); 
    treenit.lisaa(tre1); treenit.lisaa(tre2); 
    treenit.lisaa(tre1); treenit.lisaa(tre2); 
    treenit.lisaa(tre1); 
    assertEquals("From: Treenit line: 72", 12, treenit.getLkm()); 
    treenit.lisaa(tre1); 
    assertEquals("From: Treenit line: 74", 13, treenit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa90 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa90() throws CloneNotSupportedException {    // Treenit: 90
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(); 
    tre1.rekisteroi(); 
    tre1.taytaTreeni(); 
    treenit.lisaa(tre1); 
    Treeni tre2 = new Treeni(); 
    tre2.rekisteroi(); 
    tre2.taytaTreeni(); 
    treenit.lisaa(tre2); 
    treenit.korvaaTaiLisaa(tre1); 
    treenit.korvaaTaiLisaa(tre2); 
    assertEquals("From: Treenit line: 104", 2, treenit.getLkm()); 
    Treeni klooni = tre1.clone(); 
    assertEquals("From: Treenit line: 106", true, tre1.toString().equals(klooni.toString())); 
    treenit.korvaaTaiLisaa(klooni); 
    assertEquals("From: Treenit line: 108", 2, treenit.getLkm()); 
    tre1.parse("1|09.06.2023|kotikuntosali|60|5|-"); 
    assertEquals("From: Treenit line: 110", false, tre1.toString().equals(klooni.toString())); 
    treenit.korvaaTaiLisaa(tre1); 
    assertEquals("From: Treenit line: 112", 3, treenit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnna134 
   * @throws SailoException when error
   */
  @Test
  public void testAnna134() throws SailoException {    // Treenit: 134
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(); 
    Treeni tre2 = new Treeni(); 
    assertEquals("From: Treenit line: 139", 0, treenit.getLkm()); 
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 140", 1, treenit.getLkm()); 
    treenit.lisaa(tre2); assertEquals("From: Treenit line: 141", 2, treenit.getLkm()); 
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 142", 3, treenit.getLkm()); 
    assertEquals("From: Treenit line: 143", tre1, treenit.anna(0)); 
    assertEquals("From: Treenit line: 144", tre2, treenit.anna(1)); 
    assertEquals("From: Treenit line: 145", tre1, treenit.anna(2)); 
    assertEquals("From: Treenit line: 146", false, treenit.anna(1) == tre1); 
    assertEquals("From: Treenit line: 147", true, treenit.anna(1) == tre2); 
    try {
    assertEquals("From: Treenit line: 148", tre1, treenit.anna(3)); 
    fail("Treenit: 148 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta163 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta163() throws SailoException {    // Treenit: 163
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(); tre1.taytaTreeni(); 
    Treeni tre2 = new Treeni(); tre2.taytaTreeni(); 
    Treeni tre3 = new Treeni(); tre3.taytaTreeni(); 
    Treeni tre4 = new Treeni(); tre4.taytaTreeni(); 
    Treeni tre5 = new Treeni(); tre5.taytaTreeni(); 
    String nimi = "testi"; 
    File tiedosto = new File(nimi + "/treenit.dat"); 
    File dir = new File(nimi); 
    dir.mkdir(); 
    tiedosto.delete(); 
    treenit.lisaa(tre1); 
    treenit.lisaa(tre2); 
    treenit.lisaa(tre3); 
    treenit.lisaa(tre4); 
    treenit.lisaa(tre5); 
    treenit.talleta(nimi); 
    Iterator<Treeni> i = treenit.iterator(); 
    assertEquals("From: Treenit line: 184", tre1.toString(), i.next().toString()); 
    assertEquals("From: Treenit line: 185", tre2.toString(), i.next().toString()); 
    assertEquals("From: Treenit line: 186", tre3.toString(), i.next().toString()); 
    assertEquals("From: Treenit line: 187", tre4.toString(), i.next().toString()); 
    assertEquals("From: Treenit line: 188", tre5.toString(), i.next().toString()); 
    treenit = new Treenit(); 
    i = treenit.iterator(); 
    assertEquals("From: Treenit line: 191", false, i.hasNext()); 
    treenit.lueTiedostosta(nimi); 
    treenit.lisaa(tre5); 
    treenit.talleta(nimi); 
    assertEquals("From: Treenit line: 195", true, tiedosto.delete()); 
    assertEquals("From: Treenit line: 196", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTreenitIterator292 
   * @throws SailoException when error
   */
  @Test
  public void testTreenitIterator292() throws SailoException {    // Treenit: 292
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(), tre2 = new Treeni(); 
    tre1.rekisteroi(); tre2.rekisteroi(); 
    treenit.lisaa(tre1); 
    treenit.lisaa(tre2); 
    treenit.lisaa(tre1); 
    StringBuffer ids = new StringBuffer(30); 
    for (Treeni treeni:treenit) { // Kokeillaan for-silmukan toimintaa
    ids.append(" "+treeni.getTunnusNro()); 
    }
    String tulos = " " + tre1.getTunnusNro() + " " + tre2.getTunnusNro() + " " + tre1.getTunnusNro(); 
    assertEquals("From: Treenit line: 307", tulos, ids.toString()); 
    ids = new StringBuffer(30); 
    for (Iterator<Treeni> i = treenit.iterator(); i.hasNext(); ) { // ja iteraattorin toimintaa
    Treeni treeni = i.next(); 
    ids.append(" "+treeni.getTunnusNro()); 
    }
    assertEquals("From: Treenit line: 313", tulos, ids.toString()); 
    Iterator<Treeni>  i=treenit.iterator(); 
    assertEquals("From: Treenit line: 315", true, i.next() == tre1); 
    assertEquals("From: Treenit line: 316", true, i.next() == tre2); 
    assertEquals("From: Treenit line: 317", true, i.next() == tre1); 
    try {
    i.next(); 
    fail("Treenit: 318 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END
}