package punttisalimuistio.test;
// Generated by ComTest BEGIN
import java.io.File;
import punttisalimuistio.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.06.19 23:58:01 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TreenitTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa50 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa50() throws SailoException {    // Treenit: 50
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(); 
    Treeni tre2 = new Treeni(); 
    assertEquals("From: Treenit line: 55", 0, treenit.getLkm()); 
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 56", 1, treenit.getLkm()); 
    treenit.lisaa(tre2); assertEquals("From: Treenit line: 57", 2, treenit.getLkm()); 
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 58", 3, treenit.getLkm()); 
    assertEquals("From: Treenit line: 59", tre1, treenit.anna(0)); 
    assertEquals("From: Treenit line: 60", tre2, treenit.anna(1)); 
    assertEquals("From: Treenit line: 61", tre1, treenit.anna(2)); 
    assertEquals("From: Treenit line: 62", false, treenit.anna(1) == tre1); 
    assertEquals("From: Treenit line: 63", true, treenit.anna(1) == tre2); 
    try {
    assertEquals("From: Treenit line: 64", tre1, treenit.anna(3)); 
    fail("Treenit: 64 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 65", 4, treenit.getLkm()); 
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 66", 5, treenit.getLkm()); 
    treenit.lisaa(tre1); treenit.lisaa(tre2); 
    treenit.lisaa(tre1); treenit.lisaa(tre2); 
    treenit.lisaa(tre1); treenit.lisaa(tre2); 
    treenit.lisaa(tre1); 
    assertEquals("From: Treenit line: 71", 12, treenit.getLkm()); 
    try {
    treenit.lisaa(tre2); 
    fail("Treenit: 72 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    assertEquals("From: Treenit line: 73", 12, treenit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnna90 
   * @throws SailoException when error
   */
  @Test
  public void testAnna90() throws SailoException {    // Treenit: 90
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(); 
    Treeni tre2 = new Treeni(); 
    assertEquals("From: Treenit line: 95", 0, treenit.getLkm()); 
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 96", 1, treenit.getLkm()); 
    treenit.lisaa(tre2); assertEquals("From: Treenit line: 97", 2, treenit.getLkm()); 
    treenit.lisaa(tre1); assertEquals("From: Treenit line: 98", 3, treenit.getLkm()); 
    assertEquals("From: Treenit line: 99", tre1, treenit.anna(0)); 
    assertEquals("From: Treenit line: 100", tre2, treenit.anna(1)); 
    assertEquals("From: Treenit line: 101", tre1, treenit.anna(2)); 
    assertEquals("From: Treenit line: 102", false, treenit.anna(1) == tre1); 
    assertEquals("From: Treenit line: 103", true, treenit.anna(1) == tre2); 
    try {
    assertEquals("From: Treenit line: 104", tre1, treenit.anna(3)); 
    fail("Treenit: 104 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta119 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta119() throws SailoException {    // Treenit: 119
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(); tre1.taytaTreeni(); 
    Treeni tre2 = new Treeni(); tre2.taytaTreeni(); 
    Treeni tre3 = new Treeni(); tre3.taytaTreeni(); 
    Treeni tre4 = new Treeni(); tre4.taytaTreeni(); 
    Treeni tre5 = new Treeni(); tre5.taytaTreeni(); 
    String nimi = "testi"; 
    File tiedosto = new File(nimi + "/treenit.dat"); 
    File dir = new File(nimi); 
    dir.mkdir(); 
    tiedosto.delete(); 
    treenit.lisaa(tre1); 
    treenit.lisaa(tre2); 
    treenit.lisaa(tre3); 
    treenit.lisaa(tre4); 
    treenit.lisaa(tre5); 
    treenit.talleta(nimi); 
    Iterator<Treeni> i = treenit.iterator(); 
    assertEquals("From: Treenit line: 140", tre1.toString(), i.next().toString()); 
    assertEquals("From: Treenit line: 141", tre2.toString(), i.next().toString()); 
    assertEquals("From: Treenit line: 142", tre3.toString(), i.next().toString()); 
    assertEquals("From: Treenit line: 143", tre4.toString(), i.next().toString()); 
    assertEquals("From: Treenit line: 144", tre5.toString(), i.next().toString()); 
    treenit = new Treenit(); 
    i = treenit.iterator(); 
    assertEquals("From: Treenit line: 147", false, i.hasNext()); 
    treenit.lueTiedostosta(nimi); 
    treenit.lisaa(tre5); 
    treenit.talleta(nimi); 
    assertEquals("From: Treenit line: 151", true, tiedosto.delete()); 
    assertEquals("From: Treenit line: 152", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi227 
   * @throws SailoException when error
   */
  @Test
  public void testEtsi227() throws SailoException {    // Treenit: 227
    Treenit treenit = new Treenit(); 
    Treeni treeni1 = new Treeni(); treeni1.parse("1|09.06.2023|kotikuntosali|60|5|-"); 
    Treeni treeni2 = new Treeni(); treeni2.parse("2|10.06.2023|ulkokuntosali|50|1|jatkossa juotavaa"); 
    Treeni treeni3 = new Treeni(); treeni3.parse("3|12.06.2023|kotikuntosali|70|3|lisää painoja"); 
    treenit.lisaa(treeni1); treenit.lisaa(treeni2); treenit.lisaa(treeni3); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTreenitIterator250 
   * @throws SailoException when error
   */
  @Test
  public void testTreenitIterator250() throws SailoException {    // Treenit: 250
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(), tre2 = new Treeni(); 
    tre1.rekisteroi(); tre2.rekisteroi(); 
    treenit.lisaa(tre1); 
    treenit.lisaa(tre2); 
    treenit.lisaa(tre1); 
    StringBuffer ids = new StringBuffer(30); 
    for (Treeni treeni:treenit) { // Kokeillaan for-silmukan toimintaa
    ids.append(" "+treeni.getTunnusNro()); 
    }
    String tulos = " " + tre1.getTunnusNro() + " " + tre2.getTunnusNro() + " " + tre1.getTunnusNro(); 
    assertEquals("From: Treenit line: 265", tulos, ids.toString()); 
    ids = new StringBuffer(30); 
    for (Iterator<Treeni>  i=treenit.iterator(); i.hasNext(); ) { // ja iteraattorin toimintaa
    Treeni treeni = i.next(); 
    ids.append(" "+treeni.getTunnusNro()); 
    }
    assertEquals("From: Treenit line: 271", tulos, ids.toString()); 
    Iterator<Treeni>  i=treenit.iterator(); 
    assertEquals("From: Treenit line: 273", true, i.next() == tre1); 
    assertEquals("From: Treenit line: 274", true, i.next() == tre2); 
    assertEquals("From: Treenit line: 275", true, i.next() == tre1); 
    try {
    i.next(); 
    fail("Treenit: 276 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END
}