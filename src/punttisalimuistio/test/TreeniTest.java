package punttisalimuistio.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import punttisalimuistio.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.06.26 12:54:57 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TreeniTest {



  // Generated by ComTest BEGIN
  /** testGetTunnusNro45 */
  @Test
  public void testGetTunnusNro45() {    // Treeni: 45
    Treeni tre1 = new Treeni(); 
    assertEquals("From: Treeni line: 47", 0, tre1.getTunnusNro()); 
    tre1.rekisteroi(); 
    int n1 = tre1.getTunnusNro(); 
    assertEquals("From: Treeni line: 50", true, n1 > 0 && n1+1 == tre1.getSeuraavaNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetSeuraavaNro62 */
  @Test
  public void testGetSeuraavaNro62() {    // Treeni: 62
    Treeni tre1 = new Treeni(); 
    tre1.rekisteroi(); 
    assertEquals("From: Treeni line: 65", true, tre1.getSeuraavaNro() == 1 + tre1.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetPvm77 */
  @Test
  public void testGetPvm77() {    // Treeni: 77
    Treeni tre1 = new Treeni(); 
    assertEquals("From: Treeni line: 79", "", tre1.getPvm()); 
    tre1.taytaTreeni(); 
    assertEquals("From: Treeni line: 81", "12.06.2023", tre1.getPvm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta151 */
  @Test
  public void testAseta151() {    // Treeni: 151
    Treeni tre = new Treeni(); 
    assertEquals("From: Treeni line: 153", "kiellettyjä merkkejä", tre.aseta(0, "abcdefgh")); 
    assertEquals("From: Treeni line: 154", null, tre.aseta(0, "12.06.2023")); 
    assertEquals("From: Treeni line: 155", "12.06.2023", tre.getPvm()); 
    assertEquals("From: Treeni line: 156", null, tre.aseta(1, "4 b c d 3 f g")); 
    assertEquals("From: Treeni line: 157", null, tre.aseta(1, "kotikuntosali")); 
    assertEquals("From: Treeni line: 158", "kiellettyjä merkkejä", tre.aseta(2, "30 minuuttia")); 
    assertEquals("From: Treeni line: 159", null, tre.aseta(2, "30")); 
    assertEquals("From: Treeni line: 160", "fiilikset 1-5 asteikolla", tre.aseta(3, "OK")); 
    assertEquals("From: Treeni line: 161", "fiilikset 1-5 asteikolla", tre.aseta(3, "0")); 
    assertEquals("From: Treeni line: 162", null, tre.aseta(3, "3")); 
    assertEquals("From: Treeni line: 163", null, tre.aseta(4, "4 b c d 3 f g")); 
    assertEquals("From: Treeni line: 164", null, tre.aseta(4, "lisää painoja")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testTaytaTreeni202 */
  @Test
  public void testTaytaTreeni202() {    // Treeni: 202
    Treeni tre1 = new Treeni(); 
    assertEquals("From: Treeni line: 204", "", tre1.getPvm()); 
    tre1.taytaTreeni(); 
    assertEquals("From: Treeni line: 206", "12.06.2023", tre1.getPvm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi245 */
  @Test
  public void testRekisteroi245() {    // Treeni: 245
    Treeni tre1 = new Treeni(); 
    assertEquals("From: Treeni line: 247", 0, tre1.getTunnusNro()); 
    tre1.rekisteroi(); 
    int n1 = tre1.getTunnusNro(); 
    assertEquals("From: Treeni line: 250", true, n1 > 0 && n1+1 == tre1.getSeuraavaNro()); 
    Treeni tre2 = new Treeni(); 
    assertEquals("From: Treeni line: 252", 0, tre2.getTunnusNro()); 
    tre2.rekisteroi(); 
    int n2 = tre2.getTunnusNro(); 
    assertEquals("From: Treeni line: 255", true, n2 > 0 && n2+1 == tre2.getSeuraavaNro()); 
    assertEquals("From: Treeni line: 256", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone270 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone270() throws CloneNotSupportedException {    // Treeni: 270
    Treeni tre = new Treeni(); 
    tre.parse("3|12.06.2023|kotikuntosali|70"); 
    Treeni klooni = tre.clone(); 
    assertEquals("From: Treeni line: 275", true, tre.toString().equals(klooni.toString())); 
    tre.parse("1|09.06.2023|kotikuntosali|60|5|-"); 
    assertEquals("From: Treeni line: 277", false, tre.toString().equals(klooni.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString290 */
  @Test
  public void testToString290() {    // Treeni: 290
    Treeni tre1 = new Treeni(); 
    tre1.parse("3|12.06.2023|kotikuntosali|70"); 
    assertEquals("From: Treeni line: 293", true, tre1.toString().startsWith("3|12.06.2023|kotikuntosali|70|"));  // on yli 4 kenttää, siksi loppuu tolppaan
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse313 */
  @Test
  public void testParse313() {    // Treeni: 313
    Treeni tre1 = new Treeni(); 
    tre1.parse("3 |12.06.2023|kotikuntosali|70"); 
    assertEquals("From: Treeni line: 316", 3, tre1.getTunnusNro()); 
    assertEquals("From: Treeni line: 317", "12.06.2023", tre1.getPvm()); 
    assertEquals("From: Treeni line: 318", true, tre1.toString().startsWith("3|12.06.2023|kotikuntosali|70|"));  // on yli 4 kenttää, siksi loppu |
    tre1.rekisteroi(); 
    int n = tre1.getTunnusNro(); 
    tre1.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    tre1.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Treeni line: 323", n+20+1, tre1.getTunnusNro()); 
  } // Generated by ComTest END
}