package punttisalimuistio.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import punttisalimuistio.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.06.26 22:58:45 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class LiikeTest {



  // Generated by ComTest BEGIN
  /** testGetTunnusNro54 */
  @Test
  public void testGetTunnusNro54() {    // Liike: 54
    Liike lii1 = new Liike(); 
    assertEquals("From: Liike line: 56", 0, lii1.getTunnusNro()); 
    lii1.rekisteroi(); 
    int n1 = lii1.getTunnusNro(); 
    assertEquals("From: Liike line: 59", true, n1 > 0 && n1+1 == lii1.getSeuraavaNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetSeuraavaNro71 */
  @Test
  public void testGetSeuraavaNro71() {    // Liike: 71
    Liike lii1 = new Liike(); 
    lii1.rekisteroi(); 
    assertEquals("From: Liike line: 74", true, lii1.getSeuraavaNro() == 1 + lii1.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetTreeniNro86 */
  @Test
  public void testGetTreeniNro86() {    // Liike: 86
    Liike lii1 = new Liike(); 
    assertEquals("From: Liike line: 88", 0, lii1.getTreeniNro()); 
    lii1.parse("1|1|penkkipunnerrus|60|3|5"); 
    assertEquals("From: Liike line: 90", 1, lii1.getTreeniNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetNimi102 */
  @Test
  public void testGetNimi102() {    // Liike: 102
    Liike lii1 = new Liike(); 
    assertEquals("From: Liike line: 104", "", lii1.getNimi()); 
    lii1.taytaLiike(1); 
    assertEquals("From: Liike line: 106", "penkkipunnerrus", lii1.getNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta158 */
  @Test
  public void testAseta158() {    // Liike: 158
    Liike lii = new Liike(); 
    assertEquals("From: Liike line: 160", null, lii.aseta(0, "a 1 b 2 c ? defg h")); 
    assertEquals("From: Liike line: 161", null, lii.aseta(0, "penkkipunnerrus")); 
    assertEquals("From: Liike line: 162", "penkkipunnerrus", lii.getNimi()); 
    assertEquals("From: Liike line: 163", "anna paino muodossa 0.0", lii.aseta(1, "50kg")); 
    assertEquals("From: Liike line: 164", "anna paino muodossa 0.0", lii.aseta(1, "50")); 
    assertEquals("From: Liike line: 165", "anna paino muodossa 0.0", lii.aseta(1, "5a.0")); 
    assertEquals("From: Liike line: 166", "anna paino muodossa 0.0", lii.aseta(1, "5.0a")); 
    assertEquals("From: Liike line: 167", null, lii.aseta(1, "5.0")); 
    assertEquals("From: Liike line: 168", null, lii.aseta(1, "50.0")); 
    assertEquals("From: Liike line: 169", null, lii.aseta(1, "500.0")); 
    assertEquals("From: Liike line: 170", "kiellettyjä merkkejä", lii.aseta(2, "kolme")); 
    assertEquals("From: Liike line: 171", null, lii.aseta(2, "3")); 
    assertEquals("From: Liike line: 172", "kiellettyjä merkkejä", lii.aseta(3, "-1")); 
    assertEquals("From: Liike line: 173", null, lii.aseta(3, "12")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testTaytaLiike206 */
  @Test
  public void testTaytaLiike206() {    // Liike: 206
    Liike lii1 = new Liike(); 
    assertEquals("From: Liike line: 208", 0, lii1.getTreeniNro()); 
    lii1.taytaLiike(1); 
    assertEquals("From: Liike line: 210", 1, lii1.getTreeniNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi244 */
  @Test
  public void testRekisteroi244() {    // Liike: 244
    Liike lii1 = new Liike(); 
    assertEquals("From: Liike line: 246", 0, lii1.getTunnusNro()); 
    lii1.rekisteroi(); 
    int n1 = lii1.getTunnusNro(); 
    assertEquals("From: Liike line: 249", true, n1 > 0 && n1+1 == lii1.getSeuraavaNro()); 
    Liike lii2 = new Liike(); 
    assertEquals("From: Liike line: 251", 0, lii2.getTunnusNro()); 
    lii2.rekisteroi(); 
    int n2 = lii2.getTunnusNro(); 
    assertEquals("From: Liike line: 254", true, n2 > 0 && n2+1 == lii2.getSeuraavaNro()); 
    assertEquals("From: Liike line: 255", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone269 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone269() throws CloneNotSupportedException {    // Liike: 269
    Liike lii = new Liike(); 
    lii.parse("7|3|pystypunnerrus|40|3|6"); 
    Liike klooni = lii.clone(); 
    assertEquals("From: Liike line: 274", true, lii.toString().equals(klooni.toString())); 
    lii.parse("1|1|penkkipunnerrus|60|3|5"); 
    assertEquals("From: Liike line: 276", false, lii.toString().equals(klooni.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString289 */
  @Test
  public void testToString289() {    // Liike: 289
    Liike lii1 = new Liike(); 
    lii1.parse("1|1|penkkipunnerrus|60.0|3|5"); 
    assertEquals("From: Liike line: 292", true, lii1.toString().startsWith("1|1|penkkipunnerrus|60.0|"));  // on yli 4 kenttää, siksi loppuu tolppaan
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse312 */
  @Test
  public void testParse312() {    // Liike: 312
    Liike lii1 = new Liike(); 
    lii1.parse("1|1|penkkipunnerrus|60.0|3|5"); 
    assertEquals("From: Liike line: 315", 1, lii1.getTunnusNro()); 
    assertEquals("From: Liike line: 316", 1, lii1.getTreeniNro()); 
    assertEquals("From: Liike line: 317", true, lii1.toString().startsWith("1|1|penkkipunnerrus|60.0|"));  // on yli 4 kenttää, siksi loppu |
    lii1.rekisteroi(); 
    int n = lii1.getTunnusNro(); 
    lii1.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    lii1.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Liike line: 322", n+20+1, lii1.getTunnusNro()); 
  } // Generated by ComTest END
}