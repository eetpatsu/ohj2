package punttisalimuistio.test;
// Generated by ComTest BEGIN
import java.util.*;
import java.io.*;
import static org.junit.Assert.*;
import org.junit.*;
import punttisalimuistio.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.06.28 20:12:23 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class PunttisalimuistioTest {



  // Generated by ComTest BEGIN
  /** testGetTreeneja33 */
  @Test
  public void testGetTreeneja33() {    // Punttisalimuistio: 33
    Punttisalimuistio muistio = new Punttisalimuistio(); 
    Treeni tre1 = new Treeni(); 
    Treeni tre2 = new Treeni(); 
    tre1.rekisteroi(); tre2.rekisteroi(); 
    assertEquals("From: Punttisalimuistio line: 38", 0, muistio.getTreeneja()); 
    muistio.lisaa(tre1); assertEquals("From: Punttisalimuistio line: 39", 1, muistio.getTreeneja()); 
    muistio.lisaa(tre2); assertEquals("From: Punttisalimuistio line: 40", 2, muistio.getTreeneja()); 
    muistio.lisaa(tre1); assertEquals("From: Punttisalimuistio line: 41", 3, muistio.getTreeneja()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaTreeni54 
   * @throws IndexOutOfBoundsException when error
   */
  @Test
  public void testAnnaTreeni54() throws IndexOutOfBoundsException {    // Punttisalimuistio: 54
    Punttisalimuistio muistio = new Punttisalimuistio(); 
    Treeni tre1 = new Treeni(); 
    Treeni tre2 = new Treeni(); 
    tre1.rekisteroi(); tre2.rekisteroi(); 
    assertEquals("From: Punttisalimuistio line: 60", 0, muistio.getTreeneja()); 
    muistio.lisaa(tre1); assertEquals("From: Punttisalimuistio line: 61", tre1, muistio.annaTreeni(0)); 
    muistio.lisaa(tre2); assertEquals("From: Punttisalimuistio line: 62", tre2, muistio.annaTreeni(1)); 
    muistio.lisaa(tre1); assertEquals("From: Punttisalimuistio line: 63", tre1, muistio.annaTreeni(2)); 
    try {
    assertEquals("From: Punttisalimuistio line: 64", tre1, muistio.annaTreeni(3)); 
    fail("Punttisalimuistio: 64 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaLiikkeet78 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaLiikkeet78() throws SailoException {    // Punttisalimuistio: 78
    Punttisalimuistio muistio = new Punttisalimuistio(); 
    Treeni tre1 = new Treeni(), tre2 = new Treeni(), tre3 = new Treeni(); 
    tre1.rekisteroi(); tre2.rekisteroi(); tre3.rekisteroi(); 
    int id1 = tre1.getTunnusNro(); 
    int id2 = tre2.getTunnusNro(); 
    Liike lii1T1 = new Liike(id1); muistio.lisaa(lii1T1); 
    Liike lii2T1 = new Liike(id1); muistio.lisaa(lii2T1); 
    Liike lii3T2 = new Liike(id2); muistio.lisaa(lii3T2); 
    Liike lii4T2 = new Liike(id2); muistio.lisaa(lii4T2); 
    Liike lii5T2 = new Liike(id2); muistio.lisaa(lii5T2); 
    List<Liike> loytyneet; 
    loytyneet = muistio.annaLiikkeet(tre3); 
    assertEquals("From: Punttisalimuistio line: 93", 0, loytyneet.size()); 
    loytyneet = muistio.annaLiikkeet(tre1); 
    assertEquals("From: Punttisalimuistio line: 95", 2, loytyneet.size()); 
    assertEquals("From: Punttisalimuistio line: 96", true, loytyneet.get(0) == lii1T1); 
    assertEquals("From: Punttisalimuistio line: 97", true, loytyneet.get(1) == lii2T1); 
    loytyneet = muistio.annaLiikkeet(tre2); 
    assertEquals("From: Punttisalimuistio line: 99", 3, loytyneet.size()); 
    assertEquals("From: Punttisalimuistio line: 100", true, loytyneet.get(0) == lii3T2); 
    assertEquals("From: Punttisalimuistio line: 101", true, loytyneet.get(1) == lii4T2); 
    assertEquals("From: Punttisalimuistio line: 102", true, loytyneet.get(2) == lii5T2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa114 
   * @throws IndexOutOfBoundsException when error
   */
  @Test
  public void testLisaa114() throws IndexOutOfBoundsException {    // Punttisalimuistio: 114
    Punttisalimuistio muistio = new Punttisalimuistio(); 
    Treeni tre1 = new Treeni(); 
    Treeni tre2 = new Treeni(); 
    tre1.rekisteroi(); tre2.rekisteroi(); 
    assertEquals("From: Punttisalimuistio line: 120", 0, muistio.getTreeneja()); 
    muistio.lisaa(tre1); assertEquals("From: Punttisalimuistio line: 121", 1, muistio.getTreeneja()); 
    muistio.lisaa(tre2); assertEquals("From: Punttisalimuistio line: 122", 2, muistio.getTreeneja()); 
    muistio.lisaa(tre1); assertEquals("From: Punttisalimuistio line: 123", 3, muistio.getTreeneja()); 
    assertEquals("From: Punttisalimuistio line: 124", tre1, muistio.annaTreeni(0)); 
    assertEquals("From: Punttisalimuistio line: 125", tre2, muistio.annaTreeni(1)); 
    assertEquals("From: Punttisalimuistio line: 126", tre1, muistio.annaTreeni(2)); 
    try {
    assertEquals("From: Punttisalimuistio line: 127", tre1, muistio.annaTreeni(3)); 
    fail("Punttisalimuistio: 127 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    muistio.lisaa(tre1); muistio.lisaa(tre2); 
    muistio.lisaa(tre1); muistio.lisaa(tre2); 
    muistio.lisaa(tre1); muistio.lisaa(tre2); 
    muistio.lisaa(tre1); muistio.lisaa(tre2); 
    muistio.lisaa(tre1); muistio.lisaa(tre2); 
    assertEquals("From: Punttisalimuistio line: 133", 13, muistio.getTreeneja()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa146 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa146() throws CloneNotSupportedException {    // Punttisalimuistio: 146
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(); 
    tre1.rekisteroi(); 
    tre1.taytaTreeni(); 
    treenit.lisaa(tre1); 
    Treeni tre2 = new Treeni(); 
    tre2.rekisteroi(); 
    tre2.taytaTreeni(); 
    treenit.lisaa(tre2); 
    assertEquals("From: Punttisalimuistio line: 158", 2, treenit.getLkm()); 
    treenit.korvaaTaiLisaa(tre1); 
    treenit.korvaaTaiLisaa(tre2); 
    assertEquals("From: Punttisalimuistio line: 161", 2, treenit.getLkm()); 
    Treeni klooni = tre1.clone(); 
    assertEquals("From: Punttisalimuistio line: 163", true, tre1.toString().equals(klooni.toString())); 
    treenit.korvaaTaiLisaa(klooni); 
    assertEquals("From: Punttisalimuistio line: 165", 2, treenit.getLkm()); 
    tre1.parse("1|09.06.2023|kotikuntosali|60|5|-"); 
    assertEquals("From: Punttisalimuistio line: 167", false, tre1.toString().equals(klooni.toString())); 
    treenit.korvaaTaiLisaa(tre1); 
    assertEquals("From: Punttisalimuistio line: 169", 3, treenit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa182 */
  @Test
  public void testLisaa182() {    // Punttisalimuistio: 182
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(1); 
    Liike lii2T1 = new Liike(1); 
    assertEquals("From: Punttisalimuistio line: 186", 0, liikkeet.getLkm()); 
    lii1T1.rekisteroi(); 
    liikkeet.lisaa(lii1T1); 
    assertEquals("From: Punttisalimuistio line: 189", 1, liikkeet.getLkm()); 
    lii2T1.rekisteroi(); 
    liikkeet.lisaa(lii2T1); 
    assertEquals("From: Punttisalimuistio line: 192", 2, liikkeet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa205 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa205() throws CloneNotSupportedException {    // Punttisalimuistio: 205
    Liikkeet liikkeet = new Liikkeet(); 
    Liike lii1T1 = new Liike(); 
    lii1T1.rekisteroi(); 
    lii1T1.taytaLiike(1); 
    liikkeet.lisaa(lii1T1); 
    Liike lii2T1 = new Liike(); 
    lii2T1.rekisteroi(); 
    lii2T1.taytaLiike(1); 
    liikkeet.lisaa(lii2T1); 
    assertEquals("From: Punttisalimuistio line: 217", 2, liikkeet.getLkm()); 
    liikkeet.korvaaTaiLisaa(lii1T1); 
    liikkeet.korvaaTaiLisaa(lii2T1); 
    assertEquals("From: Punttisalimuistio line: 220", 2, liikkeet.getLkm()); 
    Liike klooni = lii1T1.clone(); 
    assertEquals("From: Punttisalimuistio line: 222", true, lii1T1.toString().equals(klooni.toString())); 
    liikkeet.korvaaTaiLisaa(klooni); 
    assertEquals("From: Punttisalimuistio line: 224", 2, liikkeet.getLkm()); 
    lii1T1.parse("3|1|kyykky|80|3|5"); 
    assertEquals("From: Punttisalimuistio line: 226", false, lii1T1.toString().equals(klooni.toString())); 
    liikkeet.korvaaTaiLisaa(lii1T1); 
    assertEquals("From: Punttisalimuistio line: 228", 3, liikkeet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi242 
   * @throws SailoException when error
   */
  @Test
  public void testEtsi242() throws SailoException {    // Punttisalimuistio: 242
    Treenit treenit = new Treenit(); 
    Treeni tre1 = new Treeni(), tre2 = new Treeni(), tre3 = new Treeni(); 
    tre1.rekisteroi(); tre2.rekisteroi(); tre3.rekisteroi(); 
    int nro = tre1.getTunnusNro(); 
    treenit.lisaa(tre1); treenit.lisaa(tre2); treenit.lisaa(tre3); 
    assertEquals("From: Punttisalimuistio line: 249", 1, treenit.etsiIndeksi(nro+1)); 
    assertEquals("From: Punttisalimuistio line: 250", 2, treenit.etsiIndeksi(nro+2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista263 
   * @throws SailoException when error
   */
  @Test
  public void testPoista263() throws SailoException {    // Punttisalimuistio: 263
    Punttisalimuistio muistio = new Punttisalimuistio(); 
    Treeni tre1 = new Treeni(); tre1.taytaTreeni(); tre1.rekisteroi(); 
    muistio.lisaa(tre1); 
    Liike lii1T1 = new Liike(); lii1T1.taytaLiike(tre1.getTunnusNro()); 
    muistio.lisaa(lii1T1); 
    assertEquals("From: Punttisalimuistio line: 270", 1, muistio.etsi("*",0).size()); 
    assertEquals("From: Punttisalimuistio line: 271", 1, muistio.annaLiikkeet(tre1).size()); 
    assertEquals("From: Punttisalimuistio line: 272", 1, muistio.poista(tre1)); 
    assertEquals("From: Punttisalimuistio line: 273", 0, muistio.etsi("*",0).size()); 
    assertEquals("From: Punttisalimuistio line: 274", 0, muistio.annaLiikkeet(tre1).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista290 
   * @throws SailoException when error
   */
  @Test
  public void testPoista290() throws SailoException {    // Punttisalimuistio: 290
    Punttisalimuistio muistio = new Punttisalimuistio(); 
    Treeni tre1 = new Treeni(); tre1.taytaTreeni(); tre1.rekisteroi(); 
    muistio.lisaa(tre1); 
    Liike lii1T1 = new Liike(); lii1T1.taytaLiike(tre1.getTunnusNro()); 
    muistio.lisaa(lii1T1); 
    assertEquals("From: Punttisalimuistio line: 297", 1, muistio.etsi("*",0).size()); 
    assertEquals("From: Punttisalimuistio line: 298", 1, muistio.annaLiikkeet(tre1).size()); 
    muistio.poista(lii1T1); 
    assertEquals("From: Punttisalimuistio line: 300", 0, muistio.annaLiikkeet(tre1).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta313 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta313() throws SailoException {    // Punttisalimuistio: 313
    Punttisalimuistio muistio = new Punttisalimuistio(); 
    Treeni tre1 = new Treeni(); tre1.taytaTreeni(); tre1.rekisteroi(); 
    Treeni tre2 = new Treeni(); tre2.taytaTreeni(); tre2.rekisteroi(); 
    Liike lii1T1 = new Liike(); lii1T1.taytaLiike(tre1.getTunnusNro()); 
    Liike lii2T1 = new Liike(); lii2T1.taytaLiike(tre1.getTunnusNro()); 
    Liike lii3T2 = new Liike(); lii3T2.taytaLiike(tre2.getTunnusNro()); 
    Liike lii4T2 = new Liike(); lii4T2.taytaLiike(tre2.getTunnusNro()); 
    Liike lii5T2 = new Liike(); lii5T2.taytaLiike(tre2.getTunnusNro()); 
    String hakemisto = "testi"; 
    File dir = new File(hakemisto); 
    File tiedostoT  = new File(hakemisto+"/treenit.dat"); 
    File tiedostoL = new File(hakemisto+"/liikkeet.dat"); 
    dir.mkdir(); 
    tiedostoT.delete(); 
    tiedostoL.delete(); 
    try {
    muistio.lueTiedostosta(hakemisto); 
    fail("Punttisalimuistio: 332 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    muistio.lisaa(tre1); 
    muistio.lisaa(tre2); 
    muistio.lisaa(lii1T1); 
    muistio.lisaa(lii2T1); 
    muistio.lisaa(lii3T2); 
    muistio.lisaa(lii4T2); 
    muistio.lisaa(lii5T2); 
    muistio.talleta(); 
    muistio = new Punttisalimuistio(); 
    muistio.lueTiedostosta(hakemisto); 
    List<Liike> loytyneet = muistio.annaLiikkeet(tre2); 
    Iterator<Liike> il = loytyneet.iterator(); 
    assertEquals("From: Punttisalimuistio line: 345", lii3T2.toString(), il.next().toString()); 
    assertEquals("From: Punttisalimuistio line: 346", lii4T2.toString(), il.next().toString()); 
    assertEquals("From: Punttisalimuistio line: 347", lii5T2.toString(), il.next().toString()); 
    assertEquals("From: Punttisalimuistio line: 348", false, il.hasNext()); 
    muistio.talleta(); 
    assertEquals("From: Punttisalimuistio line: 350", true, tiedostoT.delete()); 
    assertEquals("From: Punttisalimuistio line: 351", true, tiedostoL.delete()); 
    assertEquals("From: Punttisalimuistio line: 352", true, dir.delete()); 
  } // Generated by ComTest END
}